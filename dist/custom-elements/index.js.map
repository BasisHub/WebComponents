{"file":"index.js","mappings":";;;AAAA,MAAM,gBAAgB,GAAG,sBAAsB;;ICOlCA,eAAa;;;;;;EAgBxB,MAAM;IACJ,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,IAC9B,IAAI,CAAC,WAAW,EAAE,CACf,EACN,eAAa,CACR,EACP;GACH;EAED,cAAc;IACZ,IAAI,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;MAC7E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;MAC3E,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IAEnE,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;IACjC,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC5C,IAAI,UAAU,GAAG,SAAS,GAAG,EAAE,CAAC;IAGhC,IAAI,KAAK,GAAG;MACV,eAAe,EAAE,MAAM,CAAC,UAAU,CAAC;MACnC,OAAO,EAAE,MAAM;MACf,KAAK,EAAE,IAAI,CAAC,KAAK,GAAC,IAAI;MACtB,MAAM,EAAE,IAAI,CAAC,MAAM,GAAC,IAAI;MACxB,KAAK,EAAE,MAAM;MACb,SAAS,EAAE,QAAQ;MACnB,IAAI,EAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,UAAU;MAClC,UAAU,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI;MAC9B,YAAY,EAAE,KAAK;KACpB,CAAA;IAED,OAAO,KAAK,CAAC;GACd;EAED,WAAW;IAET,IAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;MACnC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;KACzG;IACD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;GAC1G;;;;SCjEa,MAAM,CAAC,KAAa,EAAE,MAAc,EAAE,IAAY;EAChE,OAAO,CAAC,KAAK,IAAI,EAAE,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;AACjF;;ACFA,MAAM,cAAc,GAAG,sBAAsB;;ICQhCC,aAAW;;;;;;EAgBd,OAAO;IACb,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;GACnD;EAED,MAAM;IACJ,OAAO,qCAAwB,IAAI,CAAC,OAAO,EAAE,CAAO,CAAC;GACtD;;;;;;;;;;;;;;;;;;;;;","names":["AvatarInitial","MyComponent"],"sources":["./src/components/avatar-initial/avatar-initial.css?tag=avatar-initial&encapsulation=shadow","./src/components/avatar-initial/avatar-initial.tsx","./src/utils/utils.ts","./src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","./src/components/my-component/my-component.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'avatar-initial',\n  styleUrl: 'avatar-initial.css',\n  shadow: true,\n})\nexport class AvatarInitial {\n  /**\n   * The width of the avatar\n   */\n   @Prop() width: number;\n\n   /**\n    * The height of the avatar\n    */\n   @Prop() height: number;\n \n   /**\n    * The user name\n    */\n   @Prop() name: string;\n\n  render() {\n    return (\n      <Host>\n        <div style={this.generateAvatar()}>\n          {this.getInitails()}\n        </div>\n        <slot></slot>\n      </Host>\n    );\n  }\n\n  generateAvatar() {\n    let colors = [\"#1abc9c\", \"#2ecc71\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#16a085\",\n     \"#27ae60\", \"#2980b9\", \"#8e44ad\", \"#2c3e50\", \"#f1c40f\", \"#e67e22\", \"#e74c3c\", \n     \"#95a5a6\", \"#f39c12\", \"#d35400\", \"#c0392b\", \"#bdc3c7\", \"#7f8c8d\"];\n\n    let initials = this.getInitails()\n    let charIndex = initials.charCodeAt(0) - 65;\n    let colorIndex = charIndex % 19;\n\n\n    let style = {\n      backgroundColor: colors[colorIndex],\n      padding: \"20px\",\n      width: this.width+\"px\",\n      height: this.height+\"px\",\n      color: '#FFF',\n      textAlign: 'center',\n      font : this.width / 2 + \"px Arial\",\n      lineHeight: this.height + 'px',\n      borderRadius: '50%'\n    }\n\n    return style;\n  }\n\n  getInitails(): string {\n\n    if(this.name.split(' ').length <= 1) {\n      return this.name.split(' ')[0].charAt(0).toUpperCase() + this.name.split(' ')[0].charAt(1).toUpperCase()\n    }\n    return this.name.split(' ')[0].charAt(0).toUpperCase() + this.name.split(\" \")[1].charAt(0).toUpperCase();\n  }\n\n}\n","export function format(first: string, middle: string, last: string): string {\n  return (first || '') + (middle ? ` ${middle}` : '') + (last ? ` ${last}` : '');\n}\n",":host {\n  display: block;\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { format } from '../../utils/utils';\n\n@Component({\n  tag: 'my-component',\n  styleUrl: 'my-component.css',\n  shadow: true,\n})\nexport class MyComponent {\n  /**\n   * The first name\n   */\n  @Prop() first: string;\n\n  /**\n   * The middle name\n   */\n  @Prop() middle: string;\n\n  /**\n   * The last name\n   */\n  @Prop() last: string;\n\n  private getText(): string {\n    return format(this.first, this.middle, this.last);\n  }\n\n  render() {\n    return <div>Hello, World! I'm {this.getText()}</div>;\n  }\n}\n"],"version":3}